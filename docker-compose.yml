version: "2.1"
services: 
    main_app:
        build: ./app/
        env_file: .env.file
        command: python3 main.py
        container_name: main_app
        ports: 
            - "8000:8000"
        depends_on: 
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
    
    ml-model:
        build: ./ml_model/
        env_file: .env.file
        command: python3 main.py
        container_name: ml_model
        ports: 
            - "5001:5001"
        depends_on: 
            redis:
                condition: service_healthy
    
    migration:
        build: ./migration/
        command: python3 main.py
        container_name: migration
        env_file: .env.file
        depends_on: 
            redis:
                condition: service_healthy
            postgres:
                condition: service_healthy

    chatbot:
        build: ./chatbot/
        command: python3 main.py
        env_file: .env.file
        container_name: chatbot
        stdin_open: true
        tty: true
        depends_on:
            postgres:
                condition: service_healthy

    postgres:
        image: postgres
        ports: 
            - "5555:5432"
        container_name: postgres
        # volumes:
        #     - ./postgres-data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 2

    redis:
        image: redis:rc-alpine
        container_name: redis
        # volumes: 
        #     - ./data:/data
        healthcheck:
            test: ["CMD", "redis-cli","ping"]
            interval: 5s
            timeout: 5s
            retries: 2